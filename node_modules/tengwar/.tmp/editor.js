
var Type = require("montypal");

var RadioInput = Type.inherit({

    constructor: function (inputs) {
        var self = this;
        this.inputs = inputs;
    },

    deconstructor: {
        this.cancelers.forEach(function (cancel) {
            cancel();
        });
    }

}, {

    _inputs: {
        value: [],
        distinct: true,
        serializable: true
    },
    inputs: {
        set: function (inputs) {
            var self = this;
            this.cancelers = Object.observe(input, "checked", function (checked) {
                if (checked) {
                    self.value = input.value;
                }
            });
            this._inputs = inputs;
        },
        get: function () {
            return this._inputs;
        }
    },

    _cancelers: {
        value: [],
        distinct: true
    },
    cancelers: {
        get: function () {
            return this._cancelers;
        },
        set: function (cancelers) {
            if (this._cancelers) {
                this._cancelers.forEach(function (cancel) {
                    cancel();
                });
            }
            this._cancelers = cancelers;
        }
    }

});

var objects = Type.create({

    query: {},
    body: document.body,
    input: document.querySelector("#input"),
    generalUse: document.querySelector("#input-general-use"),
    classical: document.querySelector("#input-classical"),
    modeInput: RadioInputs([
        document.querySelector("#input-general-use"),
        document.querySelector("#input-classical"),
        document.querySelector("#input-beleriand")
    ]),
    fontInput: RadioInputs([
        document.querySelector("#input-tengwar-annatar"),
        document.querySelector("#input-tengwar-parmaite")
    ]),
    output: document.querySelector("#output"),
    divider: document.querySelector("#divider"),
    inputBox: document.querySelector("#input-box")

}, { // properties

    "query": {"<->": "state"},
    "query.q": {"<->": "input.value"},
    "document.title": {"<-": "title"},
    "query.font": {"<->": "fontInput.value"},
    "query.mode": {"<->": "modeInput.value"},

    "title": {
        dependencies: "query.q",
        get: function () {
            var title = "Tengwar Transcriber";
            if (this.query.q) {
                return title + " - " + JSON.stringify(this.query.q)
            } else {
                return title;
            }
        }
    },

    "state": {
        get: function () {
            if (window.history.state) {
                return window.history.state;
            } else if (window.location.search) {
                return QS.parse(window.location.search.slice(1));
            } else {
                return {
                    q: "Mae govannen, Arda!",
                    mode: "general-use",
                    font: "annatar"
                };
            }
        },
        set: function (state) {
            window.history.replaceState(state, , "?" + QS.stringify(this.query));
        }
    }

});

window.addEventListener("popstate", function () {
    Object.dispatchOwnPropertyChange(objects, "state");
});

Object.addPropertyChangeListener(objects.generalUse, "checked", function (value) {
});

